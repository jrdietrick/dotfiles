ANDROID_SDK=/opt/android-sdk
ANDROID_PLATFORM_TOOLS=$ANDROID_SDK/platform-tools
ANDROID_TOOLS=$ANDROID_SDK/tools

PATH=$PATH:$ANDROID_PLATFORM_TOOLS:$ANDROID_TOOLS

function g2fa {
    if [ $1 = "gmail" ]; then
        code=`cat ~/.ssh/google_backup_codes_j.r.dietrick@gmail.com | head -n 1`
        echo $code
        echo $code | xsel -i -b
        sed "1d" -i ~/.ssh/google_backup_codes_j.r.dietrick@gmail.com
    elif [ $1 = "gather" ]; then
        code=`cat ~/.ssh/google_backup_codes_john@gatherhealth.com | head -n 1`
        echo $code
        echo $code | xsel -i -b
        sed "1d" -i ~/.ssh/google_backup_codes_john@gatherhealth.com
    fi
}

function mount_protected_cifs_share {
    sudo mount.cifs //192.168.0.99/$1/ /media/$USER/$1/ -o "username=$USER,uid=$UID,gid=$UID,file_mode=0600,dir_mode=0700,iocharset=utf8,nounix"
    if [ $? = 0 ]; then
        ls -l /media/$USER/$1/
    fi
}

function restart_adb {
    sudo $ANDROID_PLATFORM_TOOLS/adb kill-server
    sudo $ANDROID_PLATFORM_TOOLS/adb start-server
}

function boilerplate_Makefile {
    if [ -e "./Makefile" ]; then
        echo 'Refusing to clobber existing file.'
        return
    fi
    cat $HOME/.boilerplate/Makefile | sed "s/XXX_TARGET_NAME_XXX/"$1"/g" > ./Makefile
}

alias 2fa_gather='g2fa gather'
alias 2fa_personal='g2fa gmail'
alias git='LC_ALL=en_US.utf8 git'
alias gatherxmpp='~/.mcabber/log.sh gather'
alias gmailxmpp='~/.mcabber/log.sh gmail'
alias locale_english='export LC_ALL=en_US.utf8'
alias wifi_autoconnect='sudo ifconfig wlan0 up && sudo wifi autoconnect'

if [ ! -z "$BASH" ]; then
    # Initialize RVM (Ruby) if it exists
    if [ -d "/opt/rvm/" ]; then
        export PATH="$PATH:/opt/rvm/bin"
        [[ -s "/opt/rvm/scripts/rvm" ]] && source "/opt/rvm/scripts/rvm"
    fi
fi
